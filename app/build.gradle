apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-noarg'
apply plugin: 'kotlin-allopen'
apply plugin: "kotlin-kapt"

//apply plugin: 'application'
//mainClassName = "net.println.kotlin.chapter3.3_10Calc.kt"
noArg {
    annotation("net.println.kotlin.chapter4.annotations.PoKo")
}

allOpen {
    annotation("net.println.kotlin.chapter4.annotations.PoKo")
}
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.keepon.kotlin"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
//    implementation project(path: ':kotlin-stdlib-1_2_51')
//    implementation project(path: ':kotlin-stdlib-jdk7-1_2_51')
//    implementation project(path: ':kotlin-stdlib-common-1_2_51')
    testImplementation 'junit:junit:4.12'
    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofit_version}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofit_version}"
//    compileOnly files('C:\\Program Files\\Java\\jdk1.8.0_212\\jre\\lib\\rt.jar')
//    compileOnly files('D:\\java\\jdk_1.8\\jre\\lib\\rt.jar')
    def jdkPath = System.getProperty('java.home') + "\\lib\\rt.jar"
    println("------------------ $jdkPath")
    implementation files("$jdkPath")
    implementation "com.squareup.retrofit2:adapter-rxjava:${rootProject.ext.retrofit_version}"
    implementation "com.google.dagger:dagger:${rootProject.ext.dagger_version}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.ext.dagger_version}"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    implementation 'androidx.work:work-runtime:2.2.0'
    implementation 'androidx.core:core-ktx:1.0.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}
task genDict {

    doLast {
        println "Gen Proguard dict ---------------！"
        def files =file('doc')
        files.eachFile{f->
            def fileName = f.name
            def parentFile =file('..')
            def baseKeyFile = new File(parentFile,
                    ".idea/libraries/"+fileName)
            println("$f.name")

            println("$baseKeyFile")
            if(baseKeyFile.exists()){
                println("------------------------")
                baseKeyFile.withWriter("UTF-8") {
                    f.eachLine { line ->
                        it.append("$line")
                        it.append(System.lineSeparator())
                    }
                }
            }

        }


    }
}