package com.kotlin.action.ch01.服务器端的Katlin.kt

/**
 *createBy keepon
 */

//是要编写一个全新的组件还是移植一个现有服务的代码，Kotlin都毫无压力。不管
//你需要在Kotlin中继承Java类，还是以某种方式注解一个类的方法或宇段，都不会
//遇到任何问题。它带来的优点是系统的代码会更紧凑、更可靠、更易于维护。
//与此同时，Kotlin还引入了许多用于开发这类系统的新技术。例如，对构建器
//模式的支持让你可以使用更简洁的语法来创建任何对象图，同时保留了语言中全套
//的抽象机制和代码重用工具。
//这个特性的一个最简单的用例就是HTML生成库，它可以把一个外部模板语言
//替换成简洁且完全类型安全的解决方案。这里有一个例子
//
//可以轻松地把映射到HTML标签的函数和常规的Kotlin语言结构组合起来。你
//不再需要使用一门独立的模板语言，也不需要学习新的语法，仅仅使用循环就可以
//生成HTML页面。
//另一个能用上Kotlin干净和简洁的DSL的用例是持久化框架。例如，Exposed
//框架（ https ://github.com/jetbrains/exposed）就提供了易读的DSL，可以完全使用
//Kotlin代码来描述SQL数据库的结构并执行查询操作，并且有全面的类型检查。