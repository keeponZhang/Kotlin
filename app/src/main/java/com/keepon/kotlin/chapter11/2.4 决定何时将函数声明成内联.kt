package com.keepon.kotlin.chapter11

/**
 * createBy	 keepon
 */

//对于普通函数的调用，JVM已经提供了强大的内联支持。它会分析代码的执行，并在任何通过内联能够带来好处的时候将函数调用内联。
//
//带有lambda参数的函数内联能带来好处：
//
//节约了函数调用的开销，节约了为lambda创建匿名类，以及创建lambda实例对象的开销。
//JVM目前并没有聪明到总是能够将函数调用内联。
//内联使得我们可以使用一些不可能被普通lambda使用的特性，例如 非局部返回。
//但是在使用inline关键字的时候，还是应该注意代码的长度，如果你要内联的函数很大，将它的字节码拷贝到每一个调用点将会极大地增加字节码的长度。在这种情况下，你应该将那些与lambda参数无关的代码抽取到一个独立的非内联函数中。
//
//作者：泽毛
//链接：<a href='https://www.jianshu.com/p/ab877fe72b40'>https://www.jianshu.com/p/ab877fe72b40</a>
//来源：简书
//著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

















































