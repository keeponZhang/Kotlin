package com.keepon.kotlin.chapter12

/**
 * createBy	 keepon
 */

//泛型允许你定义带 类型形参 的类型，当这种类型的实例被创建出来的时候，类型形参被替换成为 类型实参 的具体类型。
//
//和Java不同，Kotlin始终要求类型实参要么被显示地说明，要么能被编译器推导出来。例如，在Java中可以声明List类型的变量，而不需要说明它可以包含哪些事物，而Kotlin从一开始就有泛型，所以它不支持原生态类型，类型实参必须定义
//
//如果需要编写一个使用列表的函数，希望它可以在任何列表上使用，需要编写一个泛型函数，泛型函数有它自己的类型形参，这些 类型形参 在每次调用时都必须替换成具体的 类型实参。
































































